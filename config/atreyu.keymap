/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOW     1
#define RAISE   2
#define QWERT   3

/ {
   behaviors {
      ctrl_tab: ctrl_tab {
      compatible = "zmk,behavior-mod-morph";
      label = "GUI_CTRL_TAB";
      #binding-cells = <0>;
      bindings = <&kp LC(TAB)>, <&kp LC(LS(TAB))>;
      mods = <(MOD_LGUI)>;
       };

      shiftable_tab: shiftable_tab {
      compatible = "zmk,behavior-mod-morph";
      label = "CTRL_TAB";
      #binding-cells = <0>;
      bindings = <&kp TAB >, <&ctrl_tab>;
      mods = <(MOD_LCTL)>;
       };

      gresc: grave_escape {
          compatible = "zmk,behavior-mod-morph";
          label = "GRAVE_ESCAPE";
          #binding-cells = <0>;
          bindings = <&kp ESC>, <&kp GRAVE>;
          mods = <(MOD_LGUI)>;
        keep-mods = <(MOD_LGUI)>;
      };
   };

   macros {
        ffback: ffback {
            compatible = "zmk,behavior-macro";
            label = "ffback";
            #binding-cells = <0>;
            bindings =
               <&macro_press &kp LCTRL>,
               <&macro_tap &kp LEFT_BRACKET>,
               <&macro_release &kp LCTRL>
            ;
        };
        ffforward: ffforward {
            compatible = "zmk,behavior-macro";
            label = "ffforward";
            #binding-cells = <0>;
            bindings =
               <&macro_press &kp LCTRL>,
               <&macro_tap &kp RIGHT_BRACKET>,
               <&macro_release &kp LCTRL>
            ;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <

   &gresc    &kp N1   &kp N2   &kp N3   &kp N4  &kp N5    &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp BSPC
   &kp TAB   &kp SQT  &kp COMMA &kp DOT  &kp P   &kp Y     &kp F  &kp G   &kp C     &kp R   &kp L    &kp SLASH
   &kp LSHFT &kp A    &kp O    &kp E    &kp U   &kp I     &kp D  &kp H     &kp T     &kp N   &kp S    &kp MINUS
   &kp LCTRL &kp SEMI &kp Q   &kp J    &kp K   &kp X     &kp B  &kp M     &kp W     &kp V   &kp Z    &kp BSLH
   &none   &kp LALT   &kp LGUI  &mo RAISE   &kp RET &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp SPACE &mo LOW  &kp EQUAL  &kp GRAVE   &kp RCTRL
                        >;
         sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                // mo 1, lower
                lower_layer {
                        bindings = <
   &tog QWERT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none     &none    &none    &kp C_PREV &kp C_PLAY_PAUSE  &kp C_NEXT    &none
   &tog LOW    &none    &none    &none    &none    &none             &ffback     &kp UP    &ffforward    &kp K_SCROLL_UP    &none    &kp K_VOL_UP
   &none    &none    &none    &none    &none    &none             &kp LEFT  &kp DOWN  &kp RIGHT    &kp K_SCROLL_DOWN    &none    &kp K_VOL_DN
   &none    &none    &none    &none    &none    &none             &kp K_BACK    &none     &kp K_FORWARD    &none    &none    &kp K_MUTE
   &bt BT_CLR    &none    &none    &none    &none    &none             &none    &none     &none    &none    &none    &none
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                // mo 2, rise
                raise_layer {
                        bindings = <
   &none    &none    &none    &none    &none    &none             &none        &none            &none       &none    &none    &none
   &none    &none    &none    &none    &none    &none             &kp KP_PLUS  &kp LPAR         &kp RPAR    &none    &none    &none
   &none    &none    &none    &none    &none    &none             &kp KP_MINUS &kp LEFT_BRACE   &kp RIGHT_BRACE    &none    &none    &none
   &none    &none    &none    &none    &none    &none             &kp KP_EQUAL    &kp LEFT_BRACKET &kp RIGHT_BRACKET    &none    &none    &none
   &none    &none    &none    &none    &none    &none             &none        &none            &none       &none    &none    &none
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                // mo 3, qwerty 
                qwerty_layer {
                        bindings = <
   &gresc    &kp N1   &kp N2   &kp N3   &kp N4  &kp N5    &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp BSPC
   &kp TAB   &kp Q   &kp W    &kp E    &kp R   &kp T        &kp Y        &kp U     &kp I     &kp O   &kp P    &kp SLASH
   &kp LSHFT &kp A   &kp S    &kp D    &kp F   &kp G        &kp H        &kp J     &kp K     &kp L   &kp SEMI    &kp SQT
   &kp LCTRL &kp Z   &kp X    &kp C    &kp V   &kp B        &kp N        &kp M     &kp COMMA &kp DOT &kp FSLH &kp FSLH
   &tog QWERT  &kp LALT   &kp LGUI  &mo RAISE   &kp RET &none &none  &kp SPACE &mo LOW     &kp EQUAL  &kp GRAVE   &kp RCTRL
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        };
};
